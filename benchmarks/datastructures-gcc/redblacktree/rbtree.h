#ifndef RBTREE_H
#define RBTREE_H 1


#include <inttypes.h>
#include "tm.h"
#include "rbtree.h"

typedef struct node {
    intptr_t k;
    intptr_t v;
    struct node* p;
    struct node* l;
    struct node* r;
    intptr_t c;
} node_t;


typedef struct rbtree {
    node_t* root;
} rbtree_t;



/* =============================================================================
 * rbtree_verify
 * =============================================================================
 */
int
rbtree_verify (rbtree_t* s, int verbose);


/* =============================================================================
 * rbtree_alloc
 * =============================================================================
 */
rbtree_t*
rbtree_alloc ();


/* =============================================================================
 * rbtree_free
 * =============================================================================
 */
void
rbtree_free (rbtree_t* r);

/* =============================================================================
 * rbtree_insert
 * =============================================================================
 */
__attribute__((transaction_safe)) int
rbtree_insert (rbtree_t* r, int key, int val);

/* =============================================================================
 * rbtree_delete
 * =============================================================================
 */
__attribute__((transaction_safe)) int
rbtree_delete (rbtree_t* r, int key);


/* =============================================================================
 * rbtree_update
 * =============================================================================
 */
int
rbtree_update (rbtree_t* r, int key, int val);

/* =============================================================================
 * rbtree_get
 * =============================================================================
 */
int
rbtree_get (rbtree_t* r, int key);

/* =============================================================================
 * rbtree_contains
 * =============================================================================
 */
__attribute__((transaction_safe)) int
rbtree_contains (rbtree_t* r, int key);


#endif /* RBTREE_H */



/* =============================================================================
 *
 * End of rbtree.h
 *
 * =============================================================================
 */
